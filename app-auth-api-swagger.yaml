openapi: 3.0.0
info:
  title: Flora auth API
  description: User registration and token renew service
  version: 1.0.0
servers:
  - url: https://api1.megaohm.ru:44302/mvp
    description: Main (production) server 1
  - url: https://api2.megaohm.ru:44302/mvp
    description: Main (production) server 2
  - url: https://dev.api.megaohm.ru:44302/mvp
    description: Development server

paths:
  /auth:
    post:
      tags:
        - auth
      summary: 'User registration request from the app'
      operationId: reg_user
      requestBody:
        description: 'User registration request in json fmt. Must contain email and phone with appropriate auth type.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegUserReq'
      responses:
        '200':
          description: 'Normal response with a session token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegUserResponse'
        '400':
          description: 'Invalid request'
        '422':
          description: 'Too early, try later'
        '429':
          description: 'Too many request'
        '500':
          description: 'Server error'
  /auth/{token}:
    put:
      tags:
        - auth
      summary: "Confirm user's registration"
      description: 'As normal result server responses with an jwt pair'
      operationId: confirm_user
      parameters:
        - in: path
          name: token
          required: true
          schema:
            $ref: '#/components/schemas/Token'
      requestBody:
        description: 'Contains confirmation code in json fmt'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmUserReq'
      responses:
        '200':
          description: 'Normal response with a token pair'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmUserResponse'
        '400':
          description: 'Invalid request'
        '401':
          description: 'Incorrect session token'
        '404':
          description: 'Incorrect code'
        '422':
          description: 'Already confirmed'
        '429':
          description: 'Too many request'
        '500':
          description: 'Server error'
  /auth/{token}/resend:
    put:
      tags:
        - auth
      summary: 'Code resend request'
      operationId: resend_code
      parameters:
        - in: path
          name: token
          required: true
          schema:
            $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: 'Normal response - code sended'
        '400':
          description: 'Invalid request'
        '401':
          description: 'Incorrect session token'
        '408':
          description: 'Previous code is not expired'
        '422':
          description: 'Already confirmed'
        '429':
          description: 'Too many request'
        '500':
          description: 'Server error'
  /auth/renew:
    put:
      tags:
        - auth
      summary: 'Access token renew request'
      operationId: renew_jwt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRenewReq'
      responses:
        '200':
          description: 'Normal response with at & rt tokens'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRenewResponse'
        '400':
          description: 'Invalid request'
        '401':
          description: 'Incorrect rt token'
        '404':
          description: 'Client not found'
        '422':
          description: 'Token already used'
        '429':
          description: 'Too many request'
        '500':
          description: 'Server error'
components:
  schemas:
    Token:
      type: string
      format: token
      pattern: "^[A-z0-9\\-\\_\\=]{20,35}$"
      example: 'oDEtGYwp1m6HzlrVZ_dcjw'
      description: user's token
    RegUserReq:
      type: object
      required:
        - clientID
        - phone
        - email
        - authType
        - clientType
      properties:
        clientID:
          type: string
          format: uuid
          pattern: "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$"
          example: "00000000-0000-0000-0000-000000000000"
        clientType:
          type: string
          enum:
            - flora_v1
        phone:
          type: string
          pattern: "^\\+[0-9]{11}$"
          example: "+71234567890"
        email:
          type: "string"
          format: email
          pattern: "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)"
          example: "example@email.me"
        authType:
          type: "string"
          enum:
            - email
            - phone
    RegUserResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: "91dc3bfb4de5b11d029d376634589b61"
        timeout:
          type: integer
          format: int32
          example: 30
    ConfirmUserReq:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          pattern: '^[0-9]{6}$'
          example: "123456"
    TokenPair:
      type: object
      required:
        - rt
        - at
      properties:
        rt:
          type: string
        at:
          type: string
    ConfirmUserResponse:
      $ref: '#/components/schemas/TokenPair'
    TokenRenewReq:
      type: object
      required:
        - rt
      properties:
        rt:
          type: string
    TokenRenewResponse:
      $ref: '#/components/schemas/TokenPair'
